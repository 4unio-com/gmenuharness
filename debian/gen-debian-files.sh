#!/bin/sh

# Copyright (C) 2015 Canonical Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Authored by: Michi Henning <michi.henning@canonical.com>,
#              Xavi Garcia <xavi.garcia.mena@canonical.com>

#
# Script to generate debian files for dual landing in Vivid (gcc 4.9 ABI)
# and Wily and later (gcc 5 ABI).
#
# This script is called from debian/rules and generates:
#
# - control
# - libgmenuharness${soversion}.install
# - libgmenuharness-dev.install
# - libgmenuharness${soversion}.symbols (for Vivid only)
# - shlibs (for Wily and later only)
#
# For all but control, this is a straight substition and/or renaming exercise for each file.
#
# Because the debian files for the different distributions are generated on the fly,
# this allows us to keep a single source tree for both distributions. 
#

set -e  # Fail if any command fails.

[ $# -ne 0 ] && {
    echo "usage: $(basename $0)" >&2
    exit 1
}
dir=./debian

distro=$(lsb_release -c -s)
echo "gen-debian-files: detected distribution: $distro"

full_version=$(cat "${dir}"/VERSION)

major=$(echo $full_version | cut -d'.' -f1)
minor=$(echo $full_version | cut -d'.' -f2)
major_minor="${major}.${minor}"

soversion="${major}.${minor}"

[ -n $soversion ]

warning=$(mktemp -t gen-debian-files-msg.XXX)

trap "rm $warning" 0 INT TERM QUIT

warning_msg()
{
    cat >$warning <<EOF
# This file is autogenerated. DO NOT EDIT!
#
# Modifications should be made to $(basename "$1") instead.
# This file is regenerated automatically in the clean target.
#
EOF
}

# Generate debian/control from debian/control.in, substituting the soversion.

infile="${dir}"/control.in
outfile="${dir}"/control
warning_msg $infile
cat $warning $infile \
    | sed -e "s/@GMENU_HARNESS_SO_VERSION@/${soversion}/" >"$outfile"

# Generate the install files, naming them according to the soversion.

# Install file for binary package
infile="${dir}"/libgmenuharness.install.in
outfile="${dir}"/libgmenuharness${soversion}.install
warning_msg "$infile"
cat $warning "$infile" >"$outfile"

# Install file for dev package
infile="${dir}"/libgmenuharness-dev.install.in
outfile="${dir}"/libgmenuharness-dev.install
warning_msg "$infile"
cat $warning "$infile" \
    | sed "s/@GMENU_HARNESS_SO_VERSION@/${soversion}/" >"$outfile"


# Symbols file for vivid or shlibs file for wily and later
if [ "$distro" = "vivid" ]
then
    infile="${dir}"/libgmenuharness.symbols.in
    outfile="${dir}"/libgmenuharness${soversion}.symbols
    sed "s/@GMENU_HARNESS_SO_VERSION@/${soversion}/g" "$infile" >"$outfile"
else
    # shlibs file
    infile="${dir}"/shlibs.in
    outfile="${dir}"/shlibs
    warning_msg "$infile"
    cat $warning "$infile" \
    | sed -e "s/@GMENU_HARNESS_SO_VERSION@/${soversion}/g" \
          -e "s/@GMENU_HARNESS_SO_VERSION_MAJOR_MINOR@/${major_minor}/g" \
         >"$outfile"
fi

exit 0
